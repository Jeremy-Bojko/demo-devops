# Nom de votre workflow
name: Build and deploy my app

# Définition du déclencheur
on:
  push:
    branches:
      - main # Déclenchement du workflow lors d'un push sur la branche main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Définition des jobs
jobs:
  build-and-deploy:
    # runs-on: ubuntu-latest # Selection d'une machine virtuelle sur laquelle notre workflow va être executé
    runs-on: self-hosted # Selection d'une machine virtuelle sur laquelle notre workflow va être executé

    steps:
      # Get the public IP of the runner
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.3

        # Whitelist the public IP of the runner on the remote server by adding it to the SSH whitelist and wait 65 seconds for the IP to be whitelisted
      - name: Whitelist IP on hosting & delete github old ones (o2switch)
        shell: bash
        run: |
          ENDPOINT='frontend/o2switch/o2switch-ssh-whitelist/index.live.php'

          echo "Get actual whitelisted IPs..."
          UNIQUE_IPS=$(curl -sX GET "https://${{ secrets.USERNAME }}:${{ secrets.URL_ENCODED_PASSWORD }}@${{ secrets.HOST }}:2083/$ENDPOINT?r=list" | jq -r '.data.list[] | .address' | sort -u)
          for address in $UNIQUE_IPS; do
            if [[ $address == "${{ secrets.IP_TO_KEEP }}" ]]; then
                echo "Keep this IP, go to the next..."
                continue
            fi
            echo "Delete this github IP: $address (in & out)"
            curl -sX GET "https://${{ secrets.USERNAME }}:${{ secrets.URL_ENCODED_PASSWORD }}@${{ secrets.HOST }}:2083/$ENDPOINT?r=remove&address=$address&direction=in&port=22" | jq
            sleep 3
            curl -sX GET "https://${{ secrets.USERNAME }}:${{ secrets.URL_ENCODED_PASSWORD }}@${{ secrets.HOST }}:2083/$ENDPOINT?r=remove&address=$address&direction=out&port=22" | jq
            sleep 3
          done
          echo "All non-whitelisted IPs deleted!"

          echo "Attempt to whitelist IP..."
          curl -sX POST -d 'whitelist[address]=${{ steps.ip.outputs.ipv4 }}' -d 'whitelist[port]=22' "https://${{ secrets.USERNAME }}:${{ secrets.URL_ENCODED_PASSWORD }}@${{ secrets.HOST }}:2083/$ENDPOINT?r=add" | jq

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build

      # Deploy to server
      - name: Deploy app via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/demo-devops/browser/*"
          target: "~/public_html/jerem.click"
